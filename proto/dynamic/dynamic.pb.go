// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dynamic.proto

package dynamic // import "dynamic-game/proto/dynamic"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GAllocateServer struct {
	RequestID            []int32  `protobuf:"varint,1,rep,packed,name=requestID" json:"requestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GAllocateServer) Reset()         { *m = GAllocateServer{} }
func (m *GAllocateServer) String() string { return proto.CompactTextString(m) }
func (*GAllocateServer) ProtoMessage()    {}
func (*GAllocateServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_dynamic_60d9e50791e0e7b1, []int{0}
}
func (m *GAllocateServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GAllocateServer.Unmarshal(m, b)
}
func (m *GAllocateServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GAllocateServer.Marshal(b, m, deterministic)
}
func (dst *GAllocateServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GAllocateServer.Merge(dst, src)
}
func (m *GAllocateServer) XXX_Size() int {
	return xxx_messageInfo_GAllocateServer.Size(m)
}
func (m *GAllocateServer) XXX_DiscardUnknown() {
	xxx_messageInfo_GAllocateServer.DiscardUnknown(m)
}

var xxx_messageInfo_GAllocateServer proto.InternalMessageInfo

func (m *GAllocateServer) GetRequestID() []int32 {
	if m != nil {
		return m.RequestID
	}
	return nil
}

type AAllocateServer struct {
	RequestID            []int32  `protobuf:"varint,1,rep,packed,name=requestID" json:"requestID,omitempty"`
	ServerID             []string `protobuf:"bytes,2,rep,name=serverID" json:"serverID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AAllocateServer) Reset()         { *m = AAllocateServer{} }
func (m *AAllocateServer) String() string { return proto.CompactTextString(m) }
func (*AAllocateServer) ProtoMessage()    {}
func (*AAllocateServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_dynamic_60d9e50791e0e7b1, []int{1}
}
func (m *AAllocateServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AAllocateServer.Unmarshal(m, b)
}
func (m *AAllocateServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AAllocateServer.Marshal(b, m, deterministic)
}
func (dst *AAllocateServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AAllocateServer.Merge(dst, src)
}
func (m *AAllocateServer) XXX_Size() int {
	return xxx_messageInfo_AAllocateServer.Size(m)
}
func (m *AAllocateServer) XXX_DiscardUnknown() {
	xxx_messageInfo_AAllocateServer.DiscardUnknown(m)
}

var xxx_messageInfo_AAllocateServer proto.InternalMessageInfo

func (m *AAllocateServer) GetRequestID() []int32 {
	if m != nil {
		return m.RequestID
	}
	return nil
}

func (m *AAllocateServer) GetServerID() []string {
	if m != nil {
		return m.ServerID
	}
	return nil
}

func init() {
	proto.RegisterType((*GAllocateServer)(nil), "dynamic.GAllocateServer")
	proto.RegisterType((*AAllocateServer)(nil), "dynamic.AAllocateServer")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AllocateServiceClient is the client API for AllocateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AllocateServiceClient interface {
	Allocate(ctx context.Context, in *GAllocateServer, opts ...grpc.CallOption) (*AAllocateServer, error)
}

type allocateServiceClient struct {
	cc *grpc.ClientConn
}

func NewAllocateServiceClient(cc *grpc.ClientConn) AllocateServiceClient {
	return &allocateServiceClient{cc}
}

func (c *allocateServiceClient) Allocate(ctx context.Context, in *GAllocateServer, opts ...grpc.CallOption) (*AAllocateServer, error) {
	out := new(AAllocateServer)
	err := c.cc.Invoke(ctx, "/dynamic.AllocateService/Allocate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AllocateServiceServer is the server API for AllocateService service.
type AllocateServiceServer interface {
	Allocate(context.Context, *GAllocateServer) (*AAllocateServer, error)
}

func RegisterAllocateServiceServer(s *grpc.Server, srv AllocateServiceServer) {
	s.RegisterService(&_AllocateService_serviceDesc, srv)
}

func _AllocateService_Allocate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GAllocateServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AllocateServiceServer).Allocate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dynamic.AllocateService/Allocate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AllocateServiceServer).Allocate(ctx, req.(*GAllocateServer))
	}
	return interceptor(ctx, in, info, handler)
}

var _AllocateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dynamic.AllocateService",
	HandlerType: (*AllocateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Allocate",
			Handler:    _AllocateService_Allocate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dynamic.proto",
}

func init() { proto.RegisterFile("dynamic.proto", fileDescriptor_dynamic_60d9e50791e0e7b1) }

var fileDescriptor_dynamic_60d9e50791e0e7b1 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xa9, 0xcc, 0x4b,
	0xcc, 0xcd, 0x4c, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xf4, 0xb9,
	0xf8, 0xdd, 0x1d, 0x73, 0x72, 0xf2, 0x93, 0x13, 0x4b, 0x52, 0x83, 0x53, 0x8b, 0xca, 0x52, 0x8b,
	0x84, 0x64, 0xb8, 0x38, 0x8b, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x3c, 0x5d, 0x24, 0x18, 0x15,
	0x98, 0x35, 0x58, 0x83, 0x10, 0x02, 0x4a, 0xde, 0x5c, 0xfc, 0x8e, 0xa4, 0x68, 0x10, 0x92, 0xe2,
	0xe2, 0x28, 0x06, 0xab, 0xf3, 0x74, 0x91, 0x60, 0x52, 0x60, 0xd6, 0xe0, 0x0c, 0x82, 0xf3, 0x8d,
	0x02, 0xb9, 0xf8, 0x91, 0xcd, 0xca, 0x4c, 0x4e, 0x15, 0xb2, 0xe3, 0xe2, 0x80, 0x09, 0x09, 0x49,
	0xe8, 0xc1, 0x5c, 0x8d, 0xe6, 0x46, 0x29, 0x84, 0x0c, 0x9a, 0x63, 0x9c, 0x54, 0xa2, 0x94, 0xa0,
	0x52, 0xba, 0xe9, 0x89, 0xb9, 0xa9, 0xfa, 0x60, 0xff, 0xea, 0x43, 0x85, 0xac, 0xa1, 0x74, 0x12,
	0x1b, 0x58, 0xd8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x55, 0x34, 0x8a, 0x24, 0x17, 0x01, 0x00,
	0x00,
}
